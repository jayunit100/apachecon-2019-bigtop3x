apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
  creationTimestamp: "2019-08-23T15:21:00Z"
  generation: 4
  labels:
    chart: spark-1.0.0
    component: fantastic-chipmunk-spark-master
    heritage: Tiller
    release: fantastic-chipmunk
  name: fantastic-chipmunk-master
  namespace: bigdata
  resourceVersion: "98252"
  selfLink: /apis/extensions/v1beta1/namespaces/bigdata/deployments/fantastic-chipmunk-master
  uid: 579b17c2-15ae-463a-8dc1-561a1fc29c94
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 1
  revisionHistoryLimit: 2147483647
  selector:
    matchLabels:
      component: fantastic-chipmunk-spark-master
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        chart: spark-1.0.0
        component: fantastic-chipmunk-spark-master
        heritage: Tiller
        release: fantastic-chipmunk
    spec:
      containers:
      - args:
        - echo $(hostname -i) fantastic-chipmunk-master >> /etc/hosts; /opt/spark/bin/spark-class
          org.apache.spark.deploy.master.Master
        command:
        - /bin/sh
        - -c
        env:
        - name: SPARK_DAEMON_MEMORY
          value: 1g
        - name: SPARK_MASTER_HOST
          value: fantastic-chipmunk-master
        - name: SPARK_MASTER_PORT
          value: "7077"
        - name: SPARK_MASTER_WEBUI_PORT
          value: "8080"
        image: mcr.microsoft.com/mmlspark/spark2.4:v4_mini
        imagePullPolicy: IfNotPresent
        name: fantastic-chipmunk-master
        ports:
        - containerPort: 7077
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/spark/conf/
          name: spark-conf-vol
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: spark-conf
        name: spark-conf-vol
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2019-08-23T15:21:00Z"
    lastUpdateTime: "2019-08-23T15:21:00Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 4
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
